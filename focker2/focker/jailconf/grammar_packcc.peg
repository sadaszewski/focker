%prefix "jailconf"

%source {
#include <stdio.h>
#include <stdlib.h>
#include <apr.h>
#include <apr_pools.h>
#include <apr_strings.h>

struct apr_pool_t *g_pool;
}

%value "char*"

top <- a:assignment EOL { printf("%s", a); }

unquoted_safe_chars <- [^ \t\n{};\"\',=+\\] { $$ = $0; }

unquoted_string <- unquoted_safe_chars+ { $$ = $0; }

string <- u:unquoted_string { $$ = u; }

equal_sign <- '='

semicolon <- ';'

assignment <- k:string equal_sign v:string semicolon { $$ = apr_pstrcat(g_pool, k, "=", v, ";", NULL); }

EOL <- '\n' / '\r\n' / '\r'

%%
int main() {
    apr_initialize();
    apr_pool_create(&g_pool, NULL);
    jailconf_context_t *ctx = jailconf_create(NULL);
    while (jailconf_parse(ctx, NULL));
    jailconf_destroy(ctx);
    apr_pool_destroy(g_pool); g_pool = NULL;
    apr_terminate();
    return 0;
}
